name: foodgram workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line
        pip install -r backend/requirements.txt

    - name: Test with flake8 and pytest
      run: |
        cd backend/
        python -m flake8

  build_and_push_to_docker_hub:
    name: Push Docker images to Docker Hub
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSPHRASE }}

      - name: Build and push Docker image backend
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: backend/
          push: true
          tags: gubaevazat/backend:latest

      - name: Build and push Docker image frontend
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: frontend/
          push: true
          tags: gubaevazat/frontend:latest

  copy_infra_to_server:
    name: Copy folder content to server
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    needs: build_and_push_to_docker_hub
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Copy folder content recursively to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: infra
          remote: ~/
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          privateKey: ${{ secrets.SSH_KEY}}
          passphrase: ${{ secrets.PASSPHRASE }}
          rmRemote: true

  deploy:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    needs: copy_infra_to_server
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker compose stop
            sudo docker compose rm backend
            sudo docker compose rm frontend
            sudo docker pull gubaevazat/frontend:latest
            sudo docker pull gubaevazat/backend:latest
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} > .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY}} >> .env
            echo SERVER_NAME=${{ secrets.HOST }} >> .env
            echo DEBUG=False >> .env
            echo DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} >> .env
            sudo docker compose up -d
